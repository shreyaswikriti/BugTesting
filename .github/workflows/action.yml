name: BUG Test
    
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  test:
    name: Test on  ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macOS-latest, ubuntu-20.04]
        include:
          - os: ubuntu-20.04
            c-compiler: "gcc"
            cxx-compiler: "g++"
          - os: ubuntu-22.04
            c-compiler: "gcc"
            cxx-compiler: "g++"
          - os: macos-latest
            c-compiler: "clang"
            cxx-compiler: "clang++"

    steps:
    - uses: actions/checkout@v2
    - name: Install cppunit  && Install OpenLibm
      if: matrix.os != 'macos-latest' 
      run: |
           sudo apt-get install -y libcppunit-dev
           sudo apt-get install libopenlibm-dev 
    - name: Install openlibm
      if: matrix.os == 'macos-latest' 
      run: brew install openlibm

   
      
    - name: Build and Test on ${{ matrix.os }}
      if: matrix.os == 'ubuntu-20.04'
      run: |
          lsb_release -a
           g++ -std=c++17 main.cc -o main
           g++ -std=c++17 Test.cc -lcppunit -o Test
           chmod +x main
           ./Test
           g++ -std=c++17 bug3.cc -o bug3
           ./bug3
          

      
    - name: Build and Test on ${{ matrix.os }}
      if: matrix.os == 'ubuntu-22.04'
      run: |
          lsb_release -a
          g++ -std=c++17 main.cc -o main -lopenlibm
          ldd main
          g++ -std=c++2a bug.cc -o bug -lopenlibm
          ldd bug
          gcc --version
          chmod +x main
          chmod +x bug
          ./main
          ./bug
          g++ -O1  -std=c++17 bug.cc -o bug
          ./bug
          g++ -std=c++17 bug3.cc -o bug3 -lopenlibm
          ldd bug3
          ./bug3
          g++ -std=c++17 bug3.cc -o bug3 
          ./bug3
          g++ -std=c++17 bug4.cc -o bug4 -lopenlibm
          ldd bug4
          ./bug4
          g++ -std=c++17 bug4.cc -o bug4
          ./bug4



      
    - name: Build and Test on ${{ matrix.os }}
      if: matrix.os == 'macos-latest'
      run: |
            clang --version
            clang++ -stdlib=libc++ main.cc  -o x
            clang++ -stdlib=libc++ bug.cc  -o v
            
            ./x
            ./v
            clang++ -stdlib=libc++ main.cc -o main  -lopenlibm
            clang++ -stdlib=libc++ bug.cc -o bug  -lopenlibm
            chmod +x main
            chmod +x bug
            ./bug
            ./main
            otool -L main
            clang++ -stdlib=libc++ bug.cc  -lopenlibm -o bug 
            ./bug
            otool -L bug
            clang++ -stdlib=libc++ bug3.cc  -lopenlibm -o bug3
            ./bug3
            otool -L bug3
            clang++ -stdlib=libc++ bug3.cc  -o bug3
            ./bug3
            clang++ -stdlib=libc++ bug4.cc  -lopenlibm -o bug4
            ./bug4
            otool -L bug4
            clang++ -stdlib=libc++ bug4.cc  -o bug4
            ./bug4


            
    